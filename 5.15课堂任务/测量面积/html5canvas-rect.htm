<!DOCTYPE HTML>
<html>
<body>

<table><tr><td>
<div id="coordiv" 
    style="float:left;width:600px;height:400px;border:0px solid dimgray" 
    onmousemove="convas_getCoordinates(event)"
    onclick="convas_click(event)"
    onmouseout="convas_finishCoordinates()">
    <canvas id="myCanvas0" width="600" height="400" 
    style="border:0px solid lightgray;">
    Your browser does not support the canvas element.
</canvas>
</div>
</td></tr>

<tr><td>
<div id="dump1"></div>
<div id="where"></div>
</td></tr>
</table>

<script type="text/javascript">
/*
 */
var width=600,high=400,thick=200;
// 信用卡的真实面积(mm^2)
var sq_card=Math.round((85.72+85.47)/2*(54.03+53.92)/2);
var p4s=[
	// 小平面区域：4点轮廓
	[[Math.round(width/4),Math.round(high/4)], 
     [Math.round(width*3/4),Math.round(high/4)],
     [Math.round(width/4),Math.round(high*3/4)],
     [Math.round(width*3/4),Math.round(high*3/4)]],
	// 大区域：
	[[Math.round(width/9),Math.round(high/9)], 
     [Math.round(width*8/9),Math.round(high/9)],
     [Math.round(width/9),Math.round(high*8/9)],
     [Math.round(width*8/9),Math.round(high*8/9)]]];
var log1 = new String("log:");
var canv0=document.getElementById("myCanvas0");
var cxt=canv0.getContext("2d");
// 添加底图
var img1 = new Image();
    img1.src = "http://bboos/cardiin.jpg";
    img1.onload = drawbg; //图片加载完成再执行
function drawbg(){
	cxt.drawImage(img1, 0,0, canv0.width,canv0.height);
	//draw_p4(p4s[0], "red");
    //draw_p4(p4s[1], "blue");
}

function draw_p4(ps, sty)
{
    cxt.beginPath();
	cxt.moveTo(ps[0][0],ps[0][1]);
	cxt.lineTo(ps[1][0],ps[1][1]);
	cxt.lineTo(ps[3][0],ps[3][1]); 
	cxt.lineTo(ps[2][0],ps[2][1]);
	cxt.lineTo(ps[0][0],ps[0][1]); 
	cxt.strokeStyle=sty; // "red" etc
	cxt.stroke();
	cxt.closePath();
}

// 4点凸多边形面积
function square_ofp4(x1,y1,x2,y2,x3,y3,x4,y4)
{
	var s1 = square_heronf(x1,y1,x2,y2,x3,y3);
	var s2 = square_heronf(x1,y1,x4,y4,x3,y3);
	return Math.round(s1+s2);
}

// 三点海伦公式
function square_heronf(x1,y1,x2,y2,x3,y3)
{
	// S=√p(p-a)(p-b)(p-c)
	var a = p2distance(x1,y1,x2,y2);
	var b = p2distance(x2,y2,x3,y3);
	var c = p2distance(x1,y1,x3,y3);
	var p = (a+b+c)/2;
	var s = Math.sqrt(p*(p-a)*(p-b)*(p-c));
	return Math.round(s);
}

function draw_line(x1,y1,x2,y2,cl)
{	
    cxt.beginPath();
	cxt.moveTo(x1,y1);
	cxt.lineTo(x2,y2); 
	cxt.strokeStyle=cl; // such as "red"
	cxt.stroke();
	cxt.closePath();
}

function convas_getCoordinates(e)
{
	x=e.clientX;
    y=e.clientY;
    document.getElementById("where").innerHTML=
        "where: (" + "x=" + x + "," +"y="+ y + ")";
}
 
function convas_finishCoordinates()
{
	document.getElementById("where").innerHTML="n/a";	
	var s1 = square_ofp4(p4s[0][0][0],p4s[0][0][1],
						 p4s[0][1][0],p4s[0][1][1],
						 p4s[0][2][0],p4s[0][2][1],
						 p4s[0][3][0],p4s[0][3][1]);
	var s2 = square_ofp4(p4s[1][0][0],p4s[1][0][1],
						 p4s[1][1][0],p4s[1][1][1],
						 p4s[1][2][0],p4s[1][2][1],
						 p4s[1][3][0],p4s[1][3][1]);
	document.getElementById("dump1").innerHTML="pixel "+s1+":"+s2+"\n"+
			"square "+sq_card+":"+Math.round(sq_card*s2/s1);
}

function p2distance(x1,y1,x2,y2)
{
	return Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));
}

function neighbor_move_to(x,y)
{
	var dis = 99999, ni=-1, nj=-1;
	for (i=0; i<2; i++)
	{
		for (j=0; j<4; j++)
		{
			var newdis = p2distance(x,y, p4s[i][j][0],p4s[i][j][1]);
			if (dis>newdis)
			{
				ni=i;
				nj=j;
				dis = newdis;
			}
		}
	}
	document.getElementById("dump1").innerHTML="move from "+ p4s[ni][nj][0]+ " " +p4s[ni][nj][1] +" to " +x+" "+y;
	p4s[ni][nj][0]=x;
	p4s[ni][nj][1]=y;
	draw_p4(p4s[0], "red");
    draw_p4(p4s[1], "blue");
}

function convas_click(e)
{
	x=e.clientX;
    y=e.clientY;
	neighbor_move_to(x,y);
	//document.getElementById("dump1").innerHTML="click on "+x+" "+y;
}

</script>


</body>
</html>
